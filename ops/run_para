#!/usr/bin/env python3

import sys, os, argparse
import subprocess, multiprocessing

parser = argparse.ArgumentParser()
parser.add_argument("cmds", type=str, help="cmd.list")
parser.add_argument("--nj", type=int, default=20, help="")
args = parser.parse_args()

tasks = []
with open(args.cmds, 'r', encoding='utf8') as f:
    for l in f:
        if l.startswith('#'):
            continue # skip comments
        if (cmd := l.strip()):
            tasks.append(cmd)

print(f'{__file__}: tasks={len(tasks)}, workers={args.nj}', file = sys.stderr)

def run(cmd):
    print(cmd, file = sys.stderr)
    os.system(cmd)

pool = multiprocessing.Pool(args.nj)
futures = [ pool.apply_async(run, (task,)) for task in tasks ]
output = [ res.get() for res in futures ]

print(f'{__file__}: parallel executing batch commands {args.cmds} done.', file = sys.stderr)

