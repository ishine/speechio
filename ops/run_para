#!/usr/bin/env python3

import sys, os, argparse
import multiprocessing

def run(task):
    print(task, file = sys.stderr)
    os.system(task)

if __name__ == '__main__':
    parser = argparse.ArgumentParser()

    parser.add_argument('-n', '--num_workers', type=int, default=20, help="number of parallel workers")
    parser.add_argument('cmds', type=str, help="a list of shell commands.")

    args = parser.parse_args()

    tasks = []
    with open(args.cmds, 'r', encoding='utf8') as f:
        for line in f:
            if not line.startswith('#'): # skip comments
                if x := line.strip():
                    tasks.append(x)

    print(f'{sys.argv[0]}: tasks={len(tasks)}, workers={args.num_workers}', file=sys.stderr)
    pool = multiprocessing.Pool(args.num_workers)
    result = [ y.get() for y in [ pool.apply_async(run, (x,)) for x in tasks ] ]
    print(f'{sys.argv[0]}: {args.cmds} done.', file=sys.stderr)

