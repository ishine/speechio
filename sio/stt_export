#!/usr/bin/env python3

import argparse
from omegaconf import OmegaConf

import torch
from pysio.stt import *

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--config', type=str)
    parser.add_argument('checkpoint', type=str)
    parser.add_argument('output', type=str)
    args = parser.parse_args()

    config = OmegaConf.load(args.config)

    tokenizer = Tokenizer(**config.tokenizer)

    model = create_model(
        config.model_name, 
        config.model_hparam, 
        config.fbank_feature_extractor.num_mel_bins, 
        tokenizer,
    )

    load_model_checkpoint(model, torch.device('cpu'), args.checkpoint)

    script_model = torch.jit.script(model)
    script_model.save(args.output)

